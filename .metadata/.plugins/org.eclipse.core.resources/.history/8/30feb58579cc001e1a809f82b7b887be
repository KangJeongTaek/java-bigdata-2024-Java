package Org.KangJeongTaek.Thread;

public class ThreadFour {

	public static void main(String[] args) throws Exception {
		MyClass my = new MyClass();

		Thread thread1 = new Thread(new Runnable() {
			@Override
			public void run() {
				my.increase();
			}
		});

		Thread thread2 = new Thread(new Runnable() {
			@Override
			public void run() {
				my.decrease();
			}
		});

		thread1.start();
		thread2.start();
		
		thread2.join();

		my.getCount();
	}
}

class Increase implements Runnable {
	MyClass my = new MyClass();

	@Override
	public void run() {
		my.increase();
	}

}

class Decrease implements Runnable {
	MyClass my = new MyClass();

	@Override
	public void run() {
		my.decrease();
	}
}

class MyClass {
	private int count;

	public synchronized void increase() {
		for (int i = 0; i < 1000; i++) {

			count++;
		}
	}

	public void decrease() {
		synchronized (this) {
			for (int i = 0; i < 1000; i++) {
				count--;
			}
		}

	}

	public void getCount() {
		System.out.println(count);
	}
}
